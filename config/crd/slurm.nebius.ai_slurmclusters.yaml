---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: slurmclusters.slurm.nebius.ai
spec:
  group: slurm.nebius.ai
  names:
    kind: SlurmCluster
    listKind: SlurmClusterList
    plural: slurmclusters
    singular: slurmcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The phase of Slurm cluster creation.
      jsonPath: .status.phase
      name: Status
      type: string
    - description: The number of controller nodes
      jsonPath: .spec.slurmNodes.controller.size
      name: Controllers
      type: integer
    - description: The number of worker nodes
      jsonPath: .spec.slurmNodes.worker.size
      name: Workers
      type: integer
    - description: The number of login nodes
      jsonPath: .spec.slurmNodes.login.size
      name: Login
      type: integer
    - description: Whether accounting is enabled
      jsonPath: .spec.slurmNodes.accounting.enabled
      name: Accounting
      type: boolean
    name: v1
    schema:
      openAPIV3Schema:
        description: SlurmCluster is the Schema for the slurmclusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SlurmClusterSpec defines the desired state of SlurmCluster
            properties:
              clusterType:
                default: gpu
                description: ClusterType define type of slurm worker nodes
                enum:
                - gpu
                - cpu
                type: string
              crVersion:
                description: CRVersion defines the version of the Operator the Custom
                  Resource belongs to
                type: string
              k8sNodeFilters:
                description: K8sNodeFilters define the k8s node filters used in Slurm
                  node specifications
                items:
                  description: K8sNodeFilter defines the k8s node filter used in Slurm
                    node specifications
                  properties:
                    affinity:
                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0Affinity'
                      description: |-
                        Affinity defines the desired affinity for the node


                        NOTE: Affinity could not be set if NodeSelector is specified
                    name:
                      description: Name defines the name of the filter
                      minLength: 1
                      type: string
                    nodeSelector:
                      additionalProperties:
                        type: string
                      description: |-
                        NodeSelector defines the desired selector for the node


                        NOTE: NodeSelector could not be set if Affinity is specified
                      type: object
                    tolerations:
                      description: Tolerations define the desired tolerations for
                        the node
                      items:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0Toleration'
                      type: array
                  required:
                  - name
                  type: object
                minItems: 1
                type: array
              ncclSettings:
                description: NCCLSettings
                properties:
                  topologyData:
                    description: TopologyData defines NCCL GPU topology
                    type: string
                  topologyType:
                    default: auto
                    description: TopologyType define type of NCCL GPU topology
                    enum:
                    - H100 GPU cluster
                    - auto
                    - custom
                    type: string
                type: object
              partitionConfiguration:
                description: |-
                  PartitionConfiguration define partition configuration of slurm worker nodes
                  https://slurm.schedmd.com/slurm.conf.html#SECTION_PARTITION-CONFIGURATION
                properties:
                  configType:
                    default: default
                    description: ConfigType
                    enum:
                    - default
                    - custom
                    type: string
                  rawConfig:
                    description: |-
                      RawConfig define partition configuration as list of string started with PartitionName
                      Example for custom ConfigType:
                      - PartitionName=low_priority Nodes=worker-[0-15] Default=YES MaxTime=INFINITE State=UP PriorityTier=1
                      - PartitionName=high_priority  Nodes=worker-[10-20] Default=NO MaxTime=INFINITE State=UP PriorityTier=2
                    items:
                      type: string
                    type: array
                type: object
              pause:
                description: |-
                  Pause defines whether to gracefully stop the cluster.
                  Setting it to false after cluster has been paused starts the cluster back
                type: boolean
              periodicChecks:
                description: PeriodicChecks define the k8s CronJobs performing cluster
                  checks
                properties:
                  ncclBenchmark:
                    description: NCCLBenchmark defines the desired state of nccl benchmark
                    properties:
                      activeDeadlineSeconds:
                        default: 1800
                        description: ActiveDeadlineSeconds defines the CronJob timeout
                          in seconds
                        format: int64
                        type: integer
                      appArmorProfile:
                        default: unconfined
                        description: AppArmorProfile defines the AppArmor profile
                          for the Slurm node
                        type: string
                      enabled:
                        default: true
                        description: Enabled defines whether the CronJob should be
                          scheduled
                        type: boolean
                      failedJobsHistoryLimit:
                        default: 3
                        description: FailedJobsHistoryLimit defines the number of
                          failed finished jobs to retain
                        format: int32
                        type: integer
                      failureActions:
                        description: FailureActions define actions performed on benchmark
                          failure
                        properties:
                          setSlurmNodeDrainState:
                            default: false
                            description: SetSlurmNodeDrainState defines whether to
                              drain Slurm node in case of benchmark failure
                            type: boolean
                        type: object
                      image:
                        description: Image defines the nccl container image
                        type: string
                      imagePullPolicy:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                        default: IfNotPresent
                        description: ImagePullPolicy defines the image pull policy
                        enum:
                        - Always
                        - Never
                        - IfNotPresent
                      k8sNodeFilterName:
                        description: |-
                          K8sNodeFilterName defines the Kubernetes node filter name associated with the Slurm node.
                          Must correspond to the name of one of [K8sNodeFilter]
                        type: string
                      ncclArguments:
                        description: NCCLArguments define nccl settings
                        properties:
                          maxBytes:
                            default: 8Gb
                            description: MaxBytes defines the maximum memory size
                              to finish nccl with
                            type: string
                          minBytes:
                            default: 512Mb
                            description: MinBytes defines the minimum memory size
                              to start nccl with
                            type: string
                          stepFactor:
                            default: "2"
                            description: StepFactor defines the multiplication factor
                              between two sequential memory sizes
                            type: string
                          thresholdMoreThan:
                            default: "0"
                            description: |-
                              ThresholdMoreThan defines the threshold for benchmark result that must be guaranteed.
                              CronJob will fail if the result is less than the threshold
                            type: string
                          timeout:
                            default: "20:00"
                            description: Timeout defines the timeout for nccl in its
                              special format
                            type: string
                          useInfiniband:
                            default: false
                            description: |-
                              UseInfiniband defines using NCCL_P2P_DISABLE=1 NCCL_SHM_DISABLE=1 NCCL_ALGO=Ring env variables for test
                              https://docs.nvidia.com/deeplearning/nccl/user-guide/docs/env.html
                            type: boolean
                        type: object
                      schedule:
                        default: 0 */3 * * *
                        description: |-
                          Schedule defines the CronJob schedule.
                          By default, runs benchmark every 3 hours
                        type: string
                      successfulJobsHistoryLimit:
                        default: 3
                        description: SuccessfulJobsHistoryLimit defines the number
                          of successful finished jobs to retain
                        format: int32
                        type: integer
                    required:
                    - image
                    - k8sNodeFilterName
                    type: object
                required:
                - ncclBenchmark
                type: object
              populateJail:
                description: PopulateJail defines the k8s Job that performs initial
                  jail file system population
                properties:
                  appArmorProfile:
                    default: unconfined
                    description: AppArmorProfile defines the AppArmor profile for
                      the Slurm node
                    type: string
                  image:
                    description: Image defines the populate jail container image
                    type: string
                  imagePullPolicy:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                    default: IfNotPresent
                    description: ImagePullPolicy defines the image pull policy
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                  jailSnapshotVolume:
                    description: |-
                      JailSnapshotVolume represents configuration of the volume containing the initial content of the jail root
                      directory. If not set, the default content is used (the Image already includes this default content)
                    properties:
                      volumeClaimTemplateSpec:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                        description: VolumeClaimTemplateSpec defines the [corev1.PersistentVolumeClaim]
                          template specification
                      volumeSourceName:
                        description: |-
                          VolumeSourceName defines the name of the volume source.
                          Must correspond to the name of one of [VolumeSource]
                        type: string
                    type: object
                  k8sNodeFilterName:
                    description: |-
                      K8sNodeFilterName defines the Kubernetes node filter name associated with the Slurm node.
                      Must correspond to the name of one of [K8sNodeFilter]
                    type: string
                  overwrite:
                    default: false
                    description: Overwrite defines whether to overwrite content on
                      the jail volume if it's already populated.
                    type: boolean
                required:
                - image
                - k8sNodeFilterName
                type: object
              secrets:
                description: Secrets define the [corev1.Secret] references needed
                  for Slurm cluster operation
                properties:
                  sshdKeysName:
                    description: SshdKeysName defines name of the [corev1.Secret]
                      with ssh keys for SSHD server
                    type: string
                type: object
              slurmNodes:
                description: SlurmNodes define the desired state of Slurm nodes
                properties:
                  accounting:
                    description: |-
                      Accounting represents the Slurm accounting configuration


                      TODO: Making accounting optional requires SlurmNode.K8sNodeFilterName to be optional.
                    properties:
                      enabled:
                        default: false
                        description: Enabled defines whether the SlurmDBD is enabled
                        type: boolean
                      externalDB:
                        description: ExternalDB represents the external database configuration
                          of connection string
                        properties:
                          enabled:
                            default: false
                            description: Enabled defines whether the external database
                              is enabled
                            type: boolean
                          host:
                            description: Host for connection string to the SlurmDBD
                              database
                            type: string
                          passwordSecretKeyRef:
                            description: SecretRef defines the reference to the secret
                              with the password key for the external database
                            properties:
                              key:
                                description: Key defines the key of password in the
                                  secret (do not put here the password, just name
                                  of the key in the secret)
                                type: string
                              name:
                                description: Name defines the name of the secret
                                type: string
                            type: object
                          port:
                            default: 3306
                            description: Port for connection string to the SlurmDBD
                              database
                            format: int32
                            type: integer
                          user:
                            description: Key defines the key of username and password
                              in the secret
                            type: string
                        type: object
                      k8sNodeFilterName:
                        description: |-
                          K8sNodeFilterName defines the Kubernetes node filter name associated with the Slurm node.
                          Must correspond to the name of one of [K8sNodeFilter]
                        type: string
                      mariadbOperator:
                        description: MariaDbOpeator represents the MariaDB CRD configuration
                        properties:
                          enabled:
                            type: boolean
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          metrics:
                            description: MariadbMetrics defines the metrics for a
                              MariaDB.
                            properties:
                              enabled:
                                description: Enabled is a flag to enable Metrics
                                type: boolean
                              exporter:
                                description: Exporter defines the metrics exporter
                                  container.
                                properties:
                                  affinity:
                                    description: Affinity to be used in the Pod.
                                    properties:
                                      antiAffinityEnabled:
                                        description: |-
                                          AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.
                                          Make sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.
                                        type: boolean
                                      nodeAffinity:
                                        description: 'Refer to the Kubernetes docs:
                                          https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeaffinity-v1-core'
                                        properties:
                                          preferredDuringSchedulingIgnoredDuringExecution:
                                            items:
                                              description: 'Refer to the Kubernetes
                                                docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#preferredschedulingterm-v1-core'
                                              properties:
                                                preference:
                                                  description: 'Refer to the Kubernetes
                                                    docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorterm-v1-core'
                                                  properties:
                                                    matchExpressions:
                                                      items:
                                                        description: 'Refer to the
                                                          Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core'
                                                        properties:
                                                          key:
                                                            type: string
                                                          operator:
                                                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0NodeSelectorOperator'
                                                          values:
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchFields:
                                                      items:
                                                        description: 'Refer to the
                                                          Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core'
                                                        properties:
                                                          key:
                                                            type: string
                                                          operator:
                                                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0NodeSelectorOperator'
                                                          values:
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  type: object
                                                weight:
                                                  format: int32
                                                  type: integer
                                              required:
                                              - preference
                                              - weight
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          requiredDuringSchedulingIgnoredDuringExecution:
                                            description: 'Refer to the Kubernetes
                                              docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselector-v1-core'
                                            properties:
                                              nodeSelectorTerms:
                                                items:
                                                  description: 'Refer to the Kubernetes
                                                    docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorterm-v1-core'
                                                  properties:
                                                    matchExpressions:
                                                      items:
                                                        description: 'Refer to the
                                                          Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core'
                                                        properties:
                                                          key:
                                                            type: string
                                                          operator:
                                                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0NodeSelectorOperator'
                                                          values:
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchFields:
                                                      items:
                                                        description: 'Refer to the
                                                          Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core'
                                                        properties:
                                                          key:
                                                            type: string
                                                          operator:
                                                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0NodeSelectorOperator'
                                                          values:
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                            - nodeSelectorTerms
                                            type: object
                                        type: object
                                      podAntiAffinity:
                                        description: 'Refer to the Kubernetes docs:
                                          https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.'
                                        properties:
                                          preferredDuringSchedulingIgnoredDuringExecution:
                                            items:
                                              description: 'Refer to the Kubernetes
                                                docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core.'
                                              properties:
                                                podAffinityTerm:
                                                  description: 'Refer to the Kubernetes
                                                    docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.'
                                                  properties:
                                                    labelSelector:
                                                      description: 'Refer to the Kubernetes
                                                        docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselector-v1-meta'
                                                      properties:
                                                        matchExpressions:
                                                          items:
                                                            description: 'Refer to
                                                              the Kubernetes docs:
                                                              https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselectorrequirement-v1-meta'
                                                            properties:
                                                              key:
                                                                type: string
                                                              operator:
                                                                description: A label
                                                                  selector operator
                                                                  is the set of operators
                                                                  that can be used
                                                                  in a selector requirement.
                                                                type: string
                                                              values:
                                                                items:
                                                                  type: string
                                                                type: array
                                                                x-kubernetes-list-type: atomic
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          type: object
                                                      type: object
                                                    topologyKey:
                                                      type: string
                                                  required:
                                                  - topologyKey
                                                  type: object
                                                weight:
                                                  format: int32
                                                  type: integer
                                              required:
                                              - podAffinityTerm
                                              - weight
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          requiredDuringSchedulingIgnoredDuringExecution:
                                            items:
                                              description: 'Refer to the Kubernetes
                                                docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.'
                                              properties:
                                                labelSelector:
                                                  description: 'Refer to the Kubernetes
                                                    docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselector-v1-meta'
                                                  properties:
                                                    matchExpressions:
                                                      items:
                                                        description: 'Refer to the
                                                          Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselectorrequirement-v1-meta'
                                                        properties:
                                                          key:
                                                            type: string
                                                          operator:
                                                            description: A label selector
                                                              operator is the set
                                                              of operators that can
                                                              be used in a selector
                                                              requirement.
                                                            type: string
                                                          values:
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                topologyKey:
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        type: object
                                    type: object
                                  image:
                                    description: |-
                                      Image name to be used as metrics exporter. The supported format is `<image>:<tag>`.
                                      Only mysqld-exporter >= v0.15.0 is supported: https://github.com/prometheus/mysqld_exporter
                                    type: string
                                  imagePullPolicy:
                                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                                    description: ImagePullPolicy is the image pull
                                      policy. One of `Always`, `Never` or `IfNotPresent`.
                                      If not defined, it defaults to `IfNotPresent`.
                                    enum:
                                    - Always
                                    - Never
                                    - IfNotPresent
                                  imagePullSecrets:
                                    description: ImagePullSecrets is the list of pull
                                      Secrets to be used to pull the image.
                                    items:
                                      description: 'Refer to the Kubernetes docs:
                                        https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.'
                                      properties:
                                        name:
                                          default: ""
                                          type: string
                                      type: object
                                    type: array
                                  nodeSelector:
                                    additionalProperties:
                                      type: string
                                    description: NodeSelector to be used in the Pod.
                                    type: object
                                  podMetadata:
                                    description: PodMetadata defines extra metadata
                                      for the Pod.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations to be added to children
                                          resources.
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: Labels to be added to children
                                          resources.
                                        type: object
                                    type: object
                                  podSecurityContext:
                                    description: SecurityContext holds pod-level security
                                      attributes and common container settings.
                                    properties:
                                      appArmorProfile:
                                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0AppArmorProfile'
                                      fsGroup:
                                        format: int64
                                        type: integer
                                      fsGroupChangePolicy:
                                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0PodFSGroupChangePolicy'
                                      runAsGroup:
                                        format: int64
                                        type: integer
                                      runAsNonRoot:
                                        type: boolean
                                      runAsUser:
                                        format: int64
                                        type: integer
                                      seLinuxOptions:
                                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0SELinuxOptions'
                                      seccompProfile:
                                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0SeccompProfile'
                                      supplementalGroups:
                                        items:
                                          format: int64
                                          type: integer
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  port:
                                    description: Port where the exporter will be listening
                                      for connections.
                                    format: int32
                                    type: integer
                                  priorityClassName:
                                    description: PriorityClassName to be used in the
                                      Pod.
                                    type: string
                                  resources:
                                    description: Resouces describes the compute resource
                                      requirements.
                                    properties:
                                      limits:
                                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                                      requests:
                                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                                    type: object
                                  securityContext:
                                    description: SecurityContext holds container-level
                                      security attributes.
                                    properties:
                                      allowPrivilegeEscalation:
                                        type: boolean
                                      capabilities:
                                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0Capabilities'
                                      privileged:
                                        type: boolean
                                      readOnlyRootFilesystem:
                                        type: boolean
                                      runAsGroup:
                                        format: int64
                                        type: integer
                                      runAsNonRoot:
                                        type: boolean
                                      runAsUser:
                                        format: int64
                                        type: integer
                                    type: object
                                  tolerations:
                                    description: Tolerations to be used in the Pod.
                                    items:
                                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0Toleration'
                                    type: array
                                type: object
                              passwordSecretKeyRef:
                                description: |-
                                  PasswordSecretKeyRef is a reference to the password of the monitoring user used by the exporter.
                                  If the referred Secret is labeled with "k8s.mariadb.com/watch", updates may be performed to the Secret in order to update the password.
                                properties:
                                  generate:
                                    default: false
                                    description: Generate indicates whether the Secret
                                      should be generated if the Secret referenced
                                      is not present.
                                    type: boolean
                                  key:
                                    type: string
                                  name:
                                    default: ""
                                    type: string
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              serviceMonitor:
                                description: ServiceMonitor defines the ServiceMonior
                                  object.
                                properties:
                                  interval:
                                    description: Interval for scraping metrics.
                                    type: string
                                  jobLabel:
                                    description: JobLabel to add to the ServiceMonitor
                                      object.
                                    type: string
                                  prometheusRelease:
                                    description: PrometheusRelease is the release
                                      label to add to the ServiceMonitor object.
                                    type: string
                                  scrapeTimeout:
                                    description: ScrapeTimeout defines the timeout
                                      for scraping metrics.
                                    type: string
                                type: object
                              username:
                                description: Username is the username of the monitoring
                                  user used by the exporter.
                                type: string
                            type: object
                          podSecurityContext:
                            description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podsecuritycontext-v1-core'
                            properties:
                              appArmorProfile:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0AppArmorProfile'
                              fsGroup:
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PodFSGroupChangePolicy'
                              runAsGroup:
                                format: int64
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                format: int64
                                type: integer
                              seLinuxOptions:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0SELinuxOptions'
                              seccompProfile:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0SeccompProfile'
                              supplementalGroups:
                                items:
                                  format: int64
                                  type: integer
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          replicas:
                            format: int32
                            type: integer
                          replication:
                            description: Replication allows you to enable single-master
                              HA via semi-synchronours replication in your MariaDB
                              cluster.
                            properties:
                              enabled:
                                description: Enabled is a flag to enable Replication.
                                type: boolean
                              primary:
                                description: Primary is the replication configuration
                                  for the primary node.
                                properties:
                                  automaticFailover:
                                    description: AutomaticFailover indicates whether
                                      the operator should automatically update PodIndex
                                      to perform an automatic primary failover.
                                    type: boolean
                                  podIndex:
                                    description: PodIndex is the StatefulSet index
                                      of the primary node. The user may change this
                                      field to perform a manual switchover.
                                    type: integer
                                type: object
                              probesEnabled:
                                description: |-
                                  ProbesEnabled indicates to use replication specific liveness and readiness probes.
                                  This probes check that the primary can receive queries and that the replica has the replication thread running.
                                type: boolean
                              replica:
                                description: ReplicaReplication is the replication
                                  configuration for the replica nodes.
                                properties:
                                  connectionRetries:
                                    description: ConnectionRetries to be used when
                                      the replica connects to the primary.
                                    type: integer
                                  connectionTimeout:
                                    description: ConnectionTimeout to be used when
                                      the replica connects to the primary.
                                    type: string
                                  gtid:
                                    description: |-
                                      Gtid indicates which Global Transaction ID should be used when connecting a replica to the master.
                                      See: https://mariadb.com/kb/en/gtid/#using-current_pos-vs-slave_pos.
                                    enum:
                                    - CurrentPos
                                    - SlavePos
                                    type: string
                                  replPasswordSecretKeyRef:
                                    description: ReplPasswordSecretKeyRef provides
                                      a reference to the Secret to use as password
                                      for the replication user.
                                    properties:
                                      generate:
                                        default: false
                                        description: Generate indicates whether the
                                          Secret should be generated if the Secret
                                          referenced is not present.
                                        type: boolean
                                      key:
                                        type: string
                                      name:
                                        default: ""
                                        type: string
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  syncTimeout:
                                    description: |-
                                      SyncTimeout defines the timeout for a replica to be synced with the primary when performing a primary switchover.
                                      If the timeout is reached, the replica GTID will be reset and the switchover will continue.
                                    type: string
                                  waitPoint:
                                    description: |-
                                      WaitPoint defines whether the transaction should wait for ACK before committing to the storage engine.
                                      More info: https://mariadb.com/kb/en/semisynchronous-replication/#rpl_semi_sync_master_wait_point.
                                    enum:
                                    - AfterSync
                                    - AfterCommit
                                    type: string
                                type: object
                              syncBinlog:
                                description: |-
                                  SyncBinlog indicates whether the binary log should be synchronized to the disk after every event.
                                  It trades off performance for consistency.
                                  See: https://mariadb.com/kb/en/replication-and-binary-log-system-variables/#sync_binlog.
                                type: boolean
                            type: object
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityContext:
                            description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#securitycontext-v1-core.'
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              capabilities:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0Capabilities'
                              privileged:
                                type: boolean
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                format: int64
                                type: integer
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                format: int64
                                type: integer
                            type: object
                          storage:
                            description: Storage defines the storage options to be
                              used for provisioning the PVCs mounted by MariaDB.
                            properties:
                              ephemeral:
                                description: Ephemeral indicates whether to use ephemeral
                                  storage in the PVCs. It is only compatible with
                                  non HA MariaDBs.
                                type: boolean
                              resizeInUseVolumes:
                                description: |-
                                  ResizeInUseVolumes indicates whether the PVCs can be resized. The 'StorageClassName' used should have 'allowVolumeExpansion' set to 'true' to allow resizing.
                                  It defaults to true.
                                type: boolean
                              size:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Size of the PVCs to be mounted by MariaDB.
                                  Required if not provided in 'VolumeClaimTemplate'.
                                  It superseeds the storage size specified in 'VolumeClaimTemplate'.
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              storageClassName:
                                description: |-
                                  StorageClassName to be used to provision the PVCS. It superseeds the 'StorageClassName' specified in 'VolumeClaimTemplate'.
                                  If not provided, the default 'StorageClass' configured in the cluster is used.
                                type: string
                              volumeClaimTemplate:
                                description: VolumeClaimTemplate provides a template
                                  to define the PVCs.
                                properties:
                                  accessModes:
                                    items:
                                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeAccessMode'
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  metadata:
                                    description: Metadata to be added to the PVC metadata.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations to be added to children
                                          resources.
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: Labels to be added to children
                                          resources.
                                        type: object
                                    type: object
                                  resources:
                                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0VolumeResourceRequirements'
                                  selector:
                                    description: |-
                                      A label selector is a label query over a set of resources. The result of matchLabels and
                                      matchExpressions are ANDed. An empty label selector matches all objects. A null
                                      label selector matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  storageClassName:
                                    type: string
                                type: object
                              waitForVolumeResize:
                                description: |-
                                  WaitForVolumeResize indicates whether to wait for the PVCs to be resized before marking the MariaDB object as ready. This will block other operations such as cluster recovery while the resize is in progress.
                                  It defaults to true.
                                type: boolean
                            type: object
                        required:
                        - image
                        type: object
                      munge:
                        description: Munge represents the Slurm munge configuration
                        properties:
                          appArmorProfile:
                            default: unconfined
                            description: AppArmorProfile defines the AppArmor profile
                              for the Slurm containers
                            type: string
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityLimitsConfig:
                            description: |-
                              SecurityLimitsConfig represents multiline limits.conf
                              format of a string should be: '* <soft|hard> <item> <value>'
                              example: '* soft nofile 1024'
                            type: string
                        required:
                        - image
                        type: object
                      size:
                        description: Size defines the number of node instances
                        format: int32
                        type: integer
                      slurmConfig:
                        description: SlurmConfig represents the Slurm accounting configuration
                          in slurm.conf
                        properties:
                          accountingStorageTRES:
                            type: string
                          accountingStoreFlags:
                            type: string
                          acctGatherFilesystemType:
                            type: string
                          acctGatherInterconnectType:
                            type: string
                          acctGatherProfileType:
                            type: string
                          jobAcctGatherFrequency:
                            default: 30
                            type: integer
                          jobAcctGatherParams:
                            enum:
                            - NoShared
                            - UsePss
                            - OverMemoryKill
                            - DisableGPUAcct
                            type: string
                          jobAcctGatherType:
                            enum:
                            - jobacct_gather/linux
                            - jobacct_gather/cgroup
                            - jobacct_gather/none
                            type: string
                          priorityWeightAge:
                            default: 0
                            type: integer
                          priorityWeightFairshare:
                            default: 0
                            type: integer
                          priorityWeightTRES:
                            default: 0
                            type: integer
                        type: object
                      slurmdbd:
                        description: Slurmdbd represents the Slurm database daemon
                          configuration
                        properties:
                          appArmorProfile:
                            default: unconfined
                            description: AppArmorProfile defines the AppArmor profile
                              for the Slurm containers
                            type: string
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityLimitsConfig:
                            description: |-
                              SecurityLimitsConfig represents multiline limits.conf
                              format of a string should be: '* <soft|hard> <item> <value>'
                              example: '* soft nofile 1024'
                            type: string
                        required:
                        - image
                        type: object
                      slurmdbdConfig:
                        description: SlurmdbdConfig represents some the SlurmDBD.conf
                          configuration
                        properties:
                          archiveEvents:
                            default: "yes"
                            enum:
                            - "yes"
                            - "no"
                            type: string
                          archiveJobs:
                            default: "yes"
                            enum:
                            - "yes"
                            - "no"
                            type: string
                          archiveResvs:
                            default: "yes"
                            enum:
                            - "yes"
                            - "no"
                            type: string
                          archiveSteps:
                            default: "no"
                            enum:
                            - "yes"
                            - "no"
                            type: string
                          archiveSuspend:
                            default: "no"
                            enum:
                            - "yes"
                            - "no"
                            type: string
                          archiveTXN:
                            default: "no"
                            enum:
                            - "yes"
                            - "no"
                            type: string
                          archiveUsage:
                            default: "yes"
                            enum:
                            - "yes"
                            - "no"
                            type: string
                          debugFlags:
                            enum:
                            - AuditRPCs
                            - DB_ARCHIVE
                            - DB_ASSOC
                            - DB_EVENT
                            - DB_JOB
                            - DB_QOS
                            - DB_QUERY
                            - DB_RESERVATION
                            - DB_RESOURCE
                            - DB_STEP
                            - DB_TRES
                            - DB_USAGE
                            - Network
                            type: string
                          debugLevel:
                            default: info
                            enum:
                            - quiet
                            - fatal
                            - error
                            - info
                            - verbose
                            - debug
                            - debug2
                            - debug3
                            - debug4
                            - debug5
                            type: string
                          privateData:
                            type: string
                          purgeEventAfter:
                            default: 1month
                            type: string
                          purgeJobAfter:
                            default: 12month
                            type: string
                          purgeResvAfter:
                            default: 1month
                            type: string
                          purgeStepAfter:
                            default: 1month
                            type: string
                          purgeSuspendAfter:
                            default: 1month
                            type: string
                          purgeTXNAfter:
                            default: 12month
                            type: string
                          purgeUsageAfter:
                            default: 24month
                            type: string
                          tcpTimeout:
                            default: 2
                            type: integer
                        type: object
                    required:
                    - k8sNodeFilterName
                    type: object
                  controller:
                    description: Controller represents the Slurm controller node configuration
                    properties:
                      k8sNodeFilterName:
                        description: |-
                          K8sNodeFilterName defines the Kubernetes node filter name associated with the Slurm node.
                          Must correspond to the name of one of [K8sNodeFilter]
                        type: string
                      munge:
                        description: Munge represents the Slurm munge configuration
                        properties:
                          appArmorProfile:
                            default: unconfined
                            description: AppArmorProfile defines the AppArmor profile
                              for the Slurm containers
                            type: string
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityLimitsConfig:
                            description: |-
                              SecurityLimitsConfig represents multiline limits.conf
                              format of a string should be: '* <soft|hard> <item> <value>'
                              example: '* soft nofile 1024'
                            type: string
                        required:
                        - image
                        type: object
                      size:
                        description: Size defines the number of node instances
                        format: int32
                        type: integer
                      slurmctld:
                        description: Slurmctld represents the Slurm control daemon
                          configuration
                        properties:
                          appArmorProfile:
                            default: unconfined
                            description: AppArmorProfile defines the AppArmor profile
                              for the Slurm containers
                            type: string
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityLimitsConfig:
                            description: |-
                              SecurityLimitsConfig represents multiline limits.conf
                              format of a string should be: '* <soft|hard> <item> <value>'
                              example: '* soft nofile 1024'
                            type: string
                        required:
                        - image
                        type: object
                      volumes:
                        description: Volumes represents the volume configurations
                          for the controller node
                        properties:
                          jail:
                            description: Jail represents the jail data volume configuration
                            properties:
                              volumeClaimTemplateSpec:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                                description: VolumeClaimTemplateSpec defines the [corev1.PersistentVolumeClaim]
                                  template specification
                              volumeSourceName:
                                description: |-
                                  VolumeSourceName defines the name of the volume source.
                                  Must correspond to the name of one of [VolumeSource]
                                type: string
                            type: object
                          spool:
                            description: Spool represents the spool data volume configuration
                            properties:
                              volumeClaimTemplateSpec:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                                description: VolumeClaimTemplateSpec defines the [corev1.PersistentVolumeClaim]
                                  template specification
                              volumeSourceName:
                                description: |-
                                  VolumeSourceName defines the name of the volume source.
                                  Must correspond to the name of one of [VolumeSource]
                                type: string
                            type: object
                        required:
                        - jail
                        - spool
                        type: object
                    required:
                    - k8sNodeFilterName
                    - munge
                    - slurmctld
                    - volumes
                    type: object
                  exporter:
                    description: |-
                      Exporter represents the Slurm exporter configuration


                      TODO: Making exporter optional requires SlurmNode.K8sNodeFilterName to be optional.
                    properties:
                      enabled:
                        default: false
                        description: It has to be set to true if Prometheus Operator
                          is used
                        type: boolean
                      exporter:
                        description: Exporter represents the Slurm exporter daemon
                          configuration
                        properties:
                          appArmorProfile:
                            default: unconfined
                            description: AppArmorProfile defines the AppArmor profile
                              for the Slurm containers
                            type: string
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          podTemplateNameRef:
                            description: It references the PodTemplate with the Slurm
                              Exporter configuration
                            type: string
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityLimitsConfig:
                            description: |-
                              SecurityLimitsConfig represents multiline limits.conf
                              format of a string should be: '* <soft|hard> <item> <value>'
                              example: '* soft nofile 1024'
                            type: string
                        required:
                        - image
                        type: object
                      k8sNodeFilterName:
                        description: |-
                          K8sNodeFilterName defines the Kubernetes node filter name associated with the Slurm node.
                          Must correspond to the name of one of [K8sNodeFilter]
                        type: string
                      munge:
                        description: Munge represents the Slurm munge configuration
                        properties:
                          appArmorProfile:
                            default: unconfined
                            description: AppArmorProfile defines the AppArmor profile
                              for the Slurm containers
                            type: string
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityLimitsConfig:
                            description: |-
                              SecurityLimitsConfig represents multiline limits.conf
                              format of a string should be: '* <soft|hard> <item> <value>'
                              example: '* soft nofile 1024'
                            type: string
                        required:
                        - image
                        type: object
                      podMonitorConfig:
                        default:
                          interval: 30s
                          jobLabel: slurm-exporter
                          scrapeTimeout: 20s
                        description: It references the PodMonitor configuration
                        properties:
                          interval:
                            description: Interval for scraping metrics. 30s by default.
                            pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                            type: string
                          jobLabel:
                            description: JobLabel to add to the PodMonitor object.
                              If not set, the default value is "slurm-exporter"
                            type: string
                          metricRelabelConfigs:
                            description: '`metricRelabelings` configures the relabeling
                              rules to apply to the samples before ingestion.'
                            items:
                              description: |-
                                RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
                                scraped samples and remote write samples.


                                More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
                              properties:
                                action:
                                  default: replace
                                  description: |-
                                    Action to perform based on the regex matching.


                                    `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
                                    `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.


                                    Default: "Replace"
                                  enum:
                                  - replace
                                  - Replace
                                  - keep
                                  - Keep
                                  - drop
                                  - Drop
                                  - hashmod
                                  - HashMod
                                  - labelmap
                                  - LabelMap
                                  - labeldrop
                                  - LabelDrop
                                  - labelkeep
                                  - LabelKeep
                                  - lowercase
                                  - Lowercase
                                  - uppercase
                                  - Uppercase
                                  - keepequal
                                  - KeepEqual
                                  - dropequal
                                  - DropEqual
                                  type: string
                                modulus:
                                  description: |-
                                    Modulus to take of the hash of the source label values.


                                    Only applicable when the action is `HashMod`.
                                  format: int64
                                  type: integer
                                regex:
                                  description: Regular expression against which the
                                    extracted value is matched.
                                  type: string
                                replacement:
                                  description: |-
                                    Replacement value against which a Replace action is performed if the
                                    regular expression matches.


                                    Regex capture groups are available.
                                  type: string
                                separator:
                                  description: Separator is the string between concatenated
                                    SourceLabels.
                                  type: string
                                sourceLabels:
                                  description: |-
                                    The source labels select values from existing labels. Their content is
                                    concatenated using the configured Separator and matched against the
                                    configured regular expression.
                                  items:
                                    description: |-
                                      LabelName is a valid Prometheus label name which may only contain ASCII
                                      letters, numbers, as well as underscores.
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                    type: string
                                  type: array
                                targetLabel:
                                  description: |-
                                    Label to which the resulting string is written in a replacement.


                                    It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,
                                    `KeepEqual` and `DropEqual` actions.


                                    Regex capture groups are available.
                                  type: string
                              type: object
                            type: array
                          relabelConfig:
                            description: RelabelConfig allows dynamic rewriting of
                              the label set for targets, alerts,
                            items:
                              description: |-
                                RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
                                scraped samples and remote write samples.


                                More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
                              properties:
                                action:
                                  default: replace
                                  description: |-
                                    Action to perform based on the regex matching.


                                    `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
                                    `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.


                                    Default: "Replace"
                                  enum:
                                  - replace
                                  - Replace
                                  - keep
                                  - Keep
                                  - drop
                                  - Drop
                                  - hashmod
                                  - HashMod
                                  - labelmap
                                  - LabelMap
                                  - labeldrop
                                  - LabelDrop
                                  - labelkeep
                                  - LabelKeep
                                  - lowercase
                                  - Lowercase
                                  - uppercase
                                  - Uppercase
                                  - keepequal
                                  - KeepEqual
                                  - dropequal
                                  - DropEqual
                                  type: string
                                modulus:
                                  description: |-
                                    Modulus to take of the hash of the source label values.


                                    Only applicable when the action is `HashMod`.
                                  format: int64
                                  type: integer
                                regex:
                                  description: Regular expression against which the
                                    extracted value is matched.
                                  type: string
                                replacement:
                                  description: |-
                                    Replacement value against which a Replace action is performed if the
                                    regular expression matches.


                                    Regex capture groups are available.
                                  type: string
                                separator:
                                  description: Separator is the string between concatenated
                                    SourceLabels.
                                  type: string
                                sourceLabels:
                                  description: |-
                                    The source labels select values from existing labels. Their content is
                                    concatenated using the configured Separator and matched against the
                                    configured regular expression.
                                  items:
                                    description: |-
                                      LabelName is a valid Prometheus label name which may only contain ASCII
                                      letters, numbers, as well as underscores.
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                    type: string
                                  type: array
                                targetLabel:
                                  description: |-
                                    Label to which the resulting string is written in a replacement.


                                    It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,
                                    `KeepEqual` and `DropEqual` actions.


                                    Regex capture groups are available.
                                  type: string
                              type: object
                            type: array
                          scrapeTimeout:
                            description: ScrapeTimeout defines the timeout for scraping
                              metrics.
                            pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                            type: string
                        type: object
                      size:
                        description: Size defines the number of node instances
                        format: int32
                        type: integer
                      volumes:
                        description: Volumes represents the volume configurations
                          for the controller node
                        properties:
                          jail:
                            description: Jail represents the jail data volume configuration
                            properties:
                              volumeClaimTemplateSpec:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                                description: VolumeClaimTemplateSpec defines the [corev1.PersistentVolumeClaim]
                                  template specification
                              volumeSourceName:
                                description: |-
                                  VolumeSourceName defines the name of the volume source.
                                  Must correspond to the name of one of [VolumeSource]
                                type: string
                            type: object
                        required:
                        - jail
                        type: object
                    required:
                    - k8sNodeFilterName
                    - munge
                    - volumes
                    type: object
                  login:
                    description: Login represents the Slurm login node configuration
                    properties:
                      k8sNodeFilterName:
                        description: |-
                          K8sNodeFilterName defines the Kubernetes node filter name associated with the Slurm node.
                          Must correspond to the name of one of [K8sNodeFilter]
                        type: string
                      munge:
                        description: Munge represents the Slurm munge configuration
                        properties:
                          appArmorProfile:
                            default: unconfined
                            description: AppArmorProfile defines the AppArmor profile
                              for the Slurm containers
                            type: string
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityLimitsConfig:
                            description: |-
                              SecurityLimitsConfig represents multiline limits.conf
                              format of a string should be: '* <soft|hard> <item> <value>'
                              example: '* soft nofile 1024'
                            type: string
                        required:
                        - image
                        type: object
                      size:
                        description: Size defines the number of node instances
                        format: int32
                        type: integer
                      sshRootPublicKeys:
                        description: SshRootPublicKeys represents the list of public
                          authorized_keys for SSH connection to Slurm login nodes
                        items:
                          type: string
                        type: array
                      sshd:
                        description: Sshd represents the SSH daemon service configuration
                        properties:
                          appArmorProfile:
                            default: unconfined
                            description: AppArmorProfile defines the AppArmor profile
                              for the Slurm containers
                            type: string
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityLimitsConfig:
                            description: |-
                              SecurityLimitsConfig represents multiline limits.conf
                              format of a string should be: '* <soft|hard> <item> <value>'
                              example: '* soft nofile 1024'
                            type: string
                        required:
                        - image
                        type: object
                      sshdServiceAnnotations:
                        additionalProperties:
                          type: string
                        description: SshdServiceAnnotations represent K8S annotations
                          that should be added to the Login node service
                        type: object
                      sshdServiceLoadBalancerIP:
                        description: SshdServiceLoadBalancerIP represents the static
                          IP address of the LoadBalancer service
                        type: string
                      sshdServiceNodePort:
                        default: 0
                        description: SshdServiceNodePort represents the port to be
                          opened on nodes in case of NodePort type of service
                        format: int32
                        type: integer
                      sshdServiceType:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ServiceType'
                        description: |-
                          SshdServiceType represents the service type for the SSH daemon
                          Must be one of [corev1.ServiceTypeLoadBalancer] or [corev1.ServiceTypeNodePort]
                      volumes:
                        description: Volumes represents the volume configurations
                          for the login node
                        properties:
                          jail:
                            description: Jail represents the jail data volume configuration
                            properties:
                              volumeClaimTemplateSpec:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                                description: VolumeClaimTemplateSpec defines the [corev1.PersistentVolumeClaim]
                                  template specification
                              volumeSourceName:
                                description: |-
                                  VolumeSourceName defines the name of the volume source.
                                  Must correspond to the name of one of [VolumeSource]
                                type: string
                            type: object
                          jailSubMounts:
                            description: JailSubMounts represents the sub-mount configurations
                              within the jail volume
                            items:
                              description: NodeVolumeJailSubMount defines the configuration
                                for a sub-mount within a jail volume
                              properties:
                                mountPath:
                                  description: MountPath defines the path where the
                                    sub-mount is mounted
                                  type: string
                                name:
                                  description: Name defines the name of the sub-mount
                                  type: string
                                volumeSourceName:
                                  description: |-
                                    VolumeSourceName defines the name of the volume source for the sub-mount.
                                    Must correspond to the name of one of [VolumeSource]
                                  type: string
                              required:
                              - mountPath
                              - name
                              - volumeSourceName
                              type: object
                            type: array
                        required:
                        - jail
                        - jailSubMounts
                        type: object
                    required:
                    - k8sNodeFilterName
                    - munge
                    - sshRootPublicKeys
                    - sshd
                    - sshdServiceType
                    - volumes
                    type: object
                  rest:
                    description: SlurmRest represents the Slur REST API configuration
                    properties:
                      enabled:
                        default: false
                        description: Enabled defines whether the SlurmRest is enabled
                        type: boolean
                      k8sNodeFilterName:
                        description: |-
                          K8sNodeFilterName defines the Kubernetes node filter name associated with the Slurm node.
                          Must correspond to the name of one of [K8sNodeFilter]
                        type: string
                      rest:
                        description: SlurmRestNode represents the Slurm REST API daemon
                          configuration
                        properties:
                          appArmorProfile:
                            default: unconfined
                            description: AppArmorProfile defines the AppArmor profile
                              for the Slurm containers
                            type: string
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityLimitsConfig:
                            description: |-
                              SecurityLimitsConfig represents multiline limits.conf
                              format of a string should be: '* <soft|hard> <item> <value>'
                              example: '* soft nofile 1024'
                            type: string
                        required:
                        - image
                        type: object
                      size:
                        description: Size defines the number of node instances
                        format: int32
                        type: integer
                    required:
                    - k8sNodeFilterName
                    type: object
                  worker:
                    description: Worker represents the Slurm worker node configuration
                    properties:
                      cgroupVersion:
                        default: v2
                        description: CgroupVersion defines the version of the cgroup
                        enum:
                        - v1
                        - v2
                        type: string
                      k8sNodeFilterName:
                        description: |-
                          K8sNodeFilterName defines the Kubernetes node filter name associated with the Slurm node.
                          Must correspond to the name of one of [K8sNodeFilter]
                        type: string
                      munge:
                        description: Munge represents the Slurm munge configuration
                        properties:
                          appArmorProfile:
                            default: unconfined
                            description: AppArmorProfile defines the AppArmor profile
                              for the Slurm containers
                            type: string
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityLimitsConfig:
                            description: |-
                              SecurityLimitsConfig represents multiline limits.conf
                              format of a string should be: '* <soft|hard> <item> <value>'
                              example: '* soft nofile 1024'
                            type: string
                        required:
                        - image
                        type: object
                      size:
                        description: Size defines the number of node instances
                        format: int32
                        type: integer
                      slurmd:
                        description: Slurmd represents the Slurm daemon service configuration
                        properties:
                          appArmorProfile:
                            default: unconfined
                            description: AppArmorProfile defines the AppArmor profile
                              for the Slurm containers
                            type: string
                          image:
                            description: Image defines the container image
                            type: string
                          imagePullPolicy:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                            default: IfNotPresent
                            description: ImagePullPolicy defines the image pull policy
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                          port:
                            description: Port defines the port the container exposes
                            format: int32
                            type: integer
                          resources:
                            $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceList'
                            description: Resources defines the [corev1.ResourceRequirements]
                              for the container
                          securityLimitsConfig:
                            description: |-
                              SecurityLimitsConfig represents multiline limits.conf
                              format of a string should be: '* <soft|hard> <item> <value>'
                              example: '* soft nofile 1024'
                            type: string
                        required:
                        - image
                        type: object
                      volumes:
                        description: Volumes represents the volume configurations
                          for the worker node
                        properties:
                          jail:
                            description: Jail represents the jail data volume configuration
                            properties:
                              volumeClaimTemplateSpec:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                                description: VolumeClaimTemplateSpec defines the [corev1.PersistentVolumeClaim]
                                  template specification
                              volumeSourceName:
                                description: |-
                                  VolumeSourceName defines the name of the volume source.
                                  Must correspond to the name of one of [VolumeSource]
                                type: string
                            type: object
                          jailSubMounts:
                            description: JailSubMounts represents the sub-mount configurations
                              within the jail volume
                            items:
                              description: NodeVolumeJailSubMount defines the configuration
                                for a sub-mount within a jail volume
                              properties:
                                mountPath:
                                  description: MountPath defines the path where the
                                    sub-mount is mounted
                                  type: string
                                name:
                                  description: Name defines the name of the sub-mount
                                  type: string
                                volumeSourceName:
                                  description: |-
                                    VolumeSourceName defines the name of the volume source for the sub-mount.
                                    Must correspond to the name of one of [VolumeSource]
                                  type: string
                              required:
                              - mountPath
                              - name
                              - volumeSourceName
                              type: object
                            type: array
                          sharedMemorySize:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 64Gi
                            description: Size of the shared memory for NCCL
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          spool:
                            description: Spool represents the spool data volume configuration
                            properties:
                              volumeClaimTemplateSpec:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                                description: VolumeClaimTemplateSpec defines the [corev1.PersistentVolumeClaim]
                                  template specification
                              volumeSourceName:
                                description: |-
                                  VolumeSourceName defines the name of the volume source.
                                  Must correspond to the name of one of [VolumeSource]
                                type: string
                            type: object
                        required:
                        - jail
                        - jailSubMounts
                        - spool
                        type: object
                    required:
                    - k8sNodeFilterName
                    - munge
                    - slurmd
                    - volumes
                    type: object
                required:
                - accounting
                - controller
                - exporter
                - login
                - rest
                - worker
                type: object
              telemetry:
                description: Metrics define the desired state of the prometheus or
                  opentelemetry metrics
                properties:
                  jobsTelemetry:
                    description: It has to be set to true if Kubernetes events for
                      Slurm jobs are sent
                    properties:
                      otelCollectorGrpcHost:
                        description: Specifies the gRPC OtelCollector host for sending
                          Opentelemetry metrics
                        type: string
                      otelCollectorHttpHost:
                        description: Specifies the HTTP OtelCollector host for sending
                          Opentelemetry metrics
                        type: string
                      otelCollectorPath:
                        default: /v1/metrics
                        description: Specifies the path to the OtelCollector endpoint
                          for sending Opentelemetry metrics
                        type: string
                      otelCollectorPort:
                        default: 4317
                        description: Specifies the port for OtelCollector
                        format: int32
                        type: integer
                      sendJobsEvents:
                        default: false
                        description: Defines whether to send Kubernetes events for
                          Slurm NCCLBenchmark jobs
                        type: boolean
                      sendOtelMetrics:
                        default: false
                        description: Defines whether to send Opentelemetry metrics
                          for Slurm NCCLBenchmark jobs
                        type: boolean
                    type: object
                    x-kubernetes-validations:
                    - message: Both OtelCollectorGrpcHost and OtelCollectorHttpHost
                        cannot be set at the same time.
                      rule: '!(has(self.otelCollectorGrpcHost) && has(self.otelCollectorHttpHost))'
                  openTelemetryCollector:
                    description: It has to be set to true if OpenTelemetry Operator
                      CRD is used
                    properties:
                      enabled:
                        default: false
                        description: It has to be set to true if OpenTelemetry Operator
                          is used
                        type: boolean
                      otelCollectorPort:
                        default: 4317
                        description: Specifies the port for OtelCollector
                        format: int32
                        type: integer
                      podTemplateNameRef:
                        description: It references the PodTemplate with the OpenTelemetry
                          Collector configuration
                        type: string
                      replicasOtelCollector:
                        default: 1
                        description: It defines the number of replicas for the OpenTelemetry
                          Collector
                        format: int32
                        type: integer
                    type: object
                type: object
              volumeSources:
                description: VolumeSources define the sources for the volumes
                items:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0VolumeSource'
                  description: VolumeSource defines the source for the volume
                  properties:
                    name:
                      description: Name defines the name of the volume source
                      minLength: 1
                      type: string
                  required:
                  - name
                  type: object
                type: array
            required:
            - k8sNodeFilters
            - periodicChecks
            - populateJail
            - secrets
            - slurmNodes
            type: object
          status:
            description: SlurmClusterStatus defines the observed state of SlurmCluster
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
