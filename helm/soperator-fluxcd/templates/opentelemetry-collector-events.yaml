{{- if and .Values.observability.enabled .Values.observability.opentelemetry.enabled }}
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: {{ include "soperator-fluxcd.fullname" . }}-opentelemetry-collector-events
  labels:
  {{- include "soperator-fluxcd.labels" . | nindent 4 }}
spec:
  chart:
    spec:
      chart: opentelemetry-collector
      interval: {{ .Values.observability.opentelemetry.events.interval }}
      sourceRef:
        kind: HelmRepository
        name: {{ include "soperator-fluxcd.fullname" . }}-opentelemetry-collector
      version: {{ .Values.observability.opentelemetry.events.version }}
  dependsOn:
  - name: {{ include "soperator-fluxcd.fullname" . }}-ns
  - name: {{ include "soperator-fluxcd.fullname" . }}-vm-logs
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
  interval: {{ .Values.observability.opentelemetry.events.interval }}
  timeout: {{ .Values.observability.opentelemetry.events.timeout }}
  releaseName: opentelemetry-collector-events
  targetNamespace: logs-system
  values:
  {{- if .Values.observability.opentelemetry.events.overrideValues }}
    {{- toYaml .Values.observability.opentelemetry.events.overrideValues | nindent 4 }}
  {{- else }}
    clusterRole:
      create: true
      rules:
      - apiGroups:
        - ""
        resources:
        - pods
        - namespaces
        verbs:
        - get
        - watch
        - list
      - apiGroups:
        - events.k8s.io
        resources:
        - events
        verbs:
        - watch
        - list
    config:
      exporters:
        otlphttp/victoriametrics:
          compression: gzip
          encoding: proto
          logs_endpoint: http://vm-victoria-logs-single-server.logs-system.svc.cluster.local.:9428/insert/opentelemetry/v1/logs
          retry_on_failure:
            initial_interval: 200ms
          timeout: 5s
        {{- if .Values.observability.opentelemetry.events.values.publicEndpointEnabled }}
        otlp:
          endpoint: dns:///write.logging.eu-north1.nebius.cloud.:443
          balancer_name: round_robin
          compression: snappy
          retry_on_failure:
            initial_interval: 200ms
          timeout: 5s
          headers:
            iam-container: project-e00h61cxzwnf6zksvdn77
          auth:
            authenticator: bearertokenauth
        {{- end }}
      extensions:
        health_check:
          endpoint: 0.0.0.0:13133
        {{- if .Values.observability.opentelemetry.events.values.publicEndpointEnabled }}
        bearertokenauth:
          filename: "/o11ytoken/accessToken"
        {{- end }}
      processors:
        batch:
          send_batch_max_size: 700
          send_batch_size: 250
        k8sattributes:
          extract:
            labels:
            - from: pod
              key: external-o11y
              tag_name: external_o11y
            - from: namespace
              key: o11y_resource_id
              tag_name: resource_id
            - from: namespace
              key: o11y_service_provider
              tag_name: service_provider
            metadata:
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.pod.start_time
          filter:
            node_from_env_var: K8S_NODE_NAME
          passthrough: false
          pod_association:
          - sources:
            - from: resource_attribute
              name: k8s.pod.ip
          - sources:
            - from: resource_attribute
              name: k8s.pod.uid
          - sources:
            - from: connection
          wait_for_metadata: true
          wait_for_metadata_timeout: 30s
        memory_limiter:
          check_interval: 5s
          limit_percentage: 80
          spike_limit_percentage: 25
        transform:
          log_statements:
          - context: log
            error_mode: ignore
            statements:
            - set(attributes["cache"], ParseJSON(body.string)) where IsMatch(body.string,
              "^\\{")
            - set(attributes["name"], attributes["cache"]["metadata"]["name"])
            - set(attributes["source"], attributes["cache"]["source"])
            - set(attributes["timestamp"], attributes["cache"]["lastTimestamp"])
            - set(attributes["count"], attributes["cache"]["count"])
            - set(attributes["type"], attributes["cache"]["type"])
            - set(body, attributes["cache"]["message"])
            - delete_key(attributes, "cache")
            - set(severity_text, "INFO")
            - set(attributes["cluster"], "${env:CLUSTER_NAME}")
      receivers:
        k8sobjects:
          auth_type: serviceAccount
          objects:
          - group: events.k8s.io
            mode: watch
            name: events
        zipkin: null
      service:
        extensions:
        - health_check
        {{- if .Values.observability.opentelemetry.events.values.publicEndpointEnabled }}
        - bearertokenauth
        {{- end }}
        pipelines:
          logs/events:
            exporters:
            - otlphttp/victoriametrics
            {{- if .Values.observability.opentelemetry.events.values.publicEndpointEnabled }}
            - otlp
            {{- end }}
            processors:
            - transform
            - memory_limiter
            - batch
            receivers:
            - k8sobjects
          metrics: null
          traces: null
    extraEnvs:
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: CLUSTER_NAME
      value: {{ .Values.observability.opentelemetry.clusterName | quote }}
    - name: GOMAXPROCS
      value: "1"
    image:
      pullPolicy: IfNotPresent
      repository: cr.eu-north1.nebius.cloud/observability/nebius-o11y-agent
      tag: 0.2.267
    mode: deployment
    rollout:
      rollingUpdate:
        maxUnavailable: 50%
      strategy: RollingUpdate
    securityContext:
      runAsGroup: 10001
      runAsUser: 10001
    serviceAccount:
      create: true
    tolerations: []
    useGOMEMLIMIT: {{ .Values.observability.opentelemetry.events.values.useGOMEMLIMIT | default true }}
    {{- if and .Values.observability.opentelemetry.events.values
    .Values.observability.opentelemetry.events.values.resources }}
    resources:
    {{- toYaml .Values.observability.opentelemetry.events.values.resources | nindent 6 }}
    {{- end }}
    {{- if .Values.observability.opentelemetry.events.values.publicEndpointEnabled }}
    extraVolumes:
      - name: o11ytoken
        secret:
          secretName: o11y-writer-sa-token
    extraVolumeMounts:
      - mountPath: /o11ytoken
        name: o11ytoken
        readOnly: true
    {{- end }}
  {{- end }}
  valuesFrom:
  - kind: ConfigMap
    name: terraform-opentelemetry-collector-events
    optional: true
    valuesKey: values.yaml
  - kind: ConfigMap
    name: opentelemetry-collector-events
    optional: true
    valuesKey: values.yaml
{{- end }}
