name: E2E test soperator

on:
  schedule:
    # Every hour
    - cron: '0 */1 * * *'
  workflow_dispatch:
    inputs:
      terraform_repo:
        description: "terraform repository with slurm cluster deployment"
        required: true
        default: "nebius/nebius-solution-library"
        type: string
      terraform_repo_ref:
        description: "ref of terraform repo to apply"
        required: true
        default: "release/soperator"
        type: string
      path_to_installation:
        description: "path inside terraform repo to terraform module to apply"
        required: true
        default: "/soperator/installations/example"
        type: string
          

permissions:
  contents: read

concurrency:
  group: global-lock
  cancel-in-progress: false

jobs:
  e2e-test:
    runs-on: 
     - e2e-tests

    environment: e2e

    env:
      PATH_TO_INSTALLATION: "${{ github.workspace }}/terraform-repo/${{ github.event.inputs.path_to_installation || '/soperator/installations/example' }}"
      TERRAFORM_REPO: "${{ github.event.inputs.terraform_repo || 'nebius/nebius-solution-library' }}"
      TERRAFORM_REPO_REF: "${{ github.event.inputs.terraform_repo_ref || 'release/soperator' }}"
      NEBIUS_TENANT_ID: ${{ vars.E2E_TEST_NEBIUS_TENANT_ID }}
      NEBIUS_PROJECT_ID: ${{ vars.E2E_TEST_NEBIUS_PROJECT_ID }}
      NEBIUS_REGION: ${{ vars.E2E_TEST_NEBIUS_REGION }}
      INFINIBAND_FABRIC: ${{ vars.E2E_TEST_INFINIBAND_FABRIC }}
      SSH_KEYS: ${{ vars.E2E_TEST_SSH_KEYS }}
      O11Y_ACCESS_TOKEN: ${{ secrets.E2E_O11Y_ACCESS_TOKEN }}
      OUTPUT_LOG_FILE: "${{ github.workspace }}/output/output.log"
      OUTPUT_ERR_FILE: "${{ github.workspace }}/output/output.err"

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install GO
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: false

      - name: Install AWS CLI v2
        run: |
          if command -v aws >/dev/null 2>&1; then
            echo "AWS CLI already installed: $(aws --version)"
            exit 0
          fi

          echo "AWS CLI not found, installing..."
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update

      - name: Find latest successful build run on current branch
        id: find_build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Looking for build run on branch: ${{ github.ref_name }}"
          run_id=$(gh api -X GET \
            "/repos/${{ github.repository }}/actions/workflows/one_job.yml/runs" \
            -F branch=${{ github.ref_name }} -F status=success \
            --jq '.workflow_runs[0].id')
          echo "run_id=$run_id" >> $GITHUB_OUTPUT

      - name: Download artifact with version
        run: |
          gh run download ${{ steps.find_build.outputs.run_id }} -n version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Read version
        run: |
          SOPERATOR_VERSION=$(sed -n '1p' version.txt)
          SOPERATOR_UNSTABLE=$(sed -n '2p' version.txt)

          echo "SOPERATOR_VERSION=$SOPERATOR_VERSION" >> $GITHUB_ENV
          echo "SOPERATOR_UNSTABLE=$SOPERATOR_UNSTABLE" >> $GITHUB_ENV

      - name: Checkout Terraform repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: ${{ env.TERRAFORM_REPO }}
          ref: ${{ env.TERRAFORM_REPO_REF }}
          path: "${{ github.workspace }}/terraform-repo"

      - name: Run Terratest
        run: |
          cd ${{ env.PATH_TO_INSTALLATION }}
          nebius iam session-management revoke --all-my-active
          source .envrc
          cd -

          # Configure AWS CLI
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $NEBIUS_REGION
          aws configure set endpoint_url https://storage.$NEBIUS_REGION.nebius.cloud:443

          GOEXPERIMENT=synctest go test -v -timeout 2h --tags=e2e ./test/e2e/...

      - name: Add errors output to job summary
        if: ${{ always() }}
        run: cat $OUTPUT_ERR_FILE >> $GITHUB_STEP_SUMMARY

      - name: Upload terraform output
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: terraform-output
          path: "${{ github.workspace }}/output"
