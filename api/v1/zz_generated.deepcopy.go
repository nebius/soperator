//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	"github.com/mariadb-operator/mariadb-operator/api/v1alpha1"
	monitoringv1 "github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring/v1"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/util/intstr"
	"nebius.ai/slurm-operator/internal/consts"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountingSlurmConf) DeepCopyInto(out *AccountingSlurmConf) {
	*out = *in
	if in.AccountingStorageTRES != nil {
		in, out := &in.AccountingStorageTRES, &out.AccountingStorageTRES
		*out = new(string)
		**out = **in
	}
	if in.AccountingStoreFlags != nil {
		in, out := &in.AccountingStoreFlags, &out.AccountingStoreFlags
		*out = new(string)
		**out = **in
	}
	if in.AcctGatherInterconnectType != nil {
		in, out := &in.AcctGatherInterconnectType, &out.AcctGatherInterconnectType
		*out = new(string)
		**out = **in
	}
	if in.AcctGatherFilesystemType != nil {
		in, out := &in.AcctGatherFilesystemType, &out.AcctGatherFilesystemType
		*out = new(string)
		**out = **in
	}
	if in.AcctGatherProfileType != nil {
		in, out := &in.AcctGatherProfileType, &out.AcctGatherProfileType
		*out = new(string)
		**out = **in
	}
	if in.JobAcctGatherType != nil {
		in, out := &in.JobAcctGatherType, &out.JobAcctGatherType
		*out = new(string)
		**out = **in
	}
	if in.JobAcctGatherFrequency != nil {
		in, out := &in.JobAcctGatherFrequency, &out.JobAcctGatherFrequency
		*out = new(int)
		**out = **in
	}
	if in.JobAcctGatherParams != nil {
		in, out := &in.JobAcctGatherParams, &out.JobAcctGatherParams
		*out = new(string)
		**out = **in
	}
	if in.PriorityWeightAge != nil {
		in, out := &in.PriorityWeightAge, &out.PriorityWeightAge
		*out = new(int16)
		**out = **in
	}
	if in.PriorityWeightFairshare != nil {
		in, out := &in.PriorityWeightFairshare, &out.PriorityWeightFairshare
		*out = new(int16)
		**out = **in
	}
	if in.PriorityWeightQOS != nil {
		in, out := &in.PriorityWeightQOS, &out.PriorityWeightQOS
		*out = new(int16)
		**out = **in
	}
	if in.PriorityWeightTRES != nil {
		in, out := &in.PriorityWeightTRES, &out.PriorityWeightTRES
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountingSlurmConf.
func (in *AccountingSlurmConf) DeepCopy() *AccountingSlurmConf {
	if in == nil {
		return nil
	}
	out := new(AccountingSlurmConf)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExporterContainer) DeepCopyInto(out *ExporterContainer) {
	*out = *in
	in.NodeContainer.DeepCopyInto(&out.NodeContainer)
	if in.PodTemplateNameRef != nil {
		in, out := &in.PodTemplateNameRef, &out.PodTemplateNameRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExporterContainer.
func (in *ExporterContainer) DeepCopy() *ExporterContainer {
	if in == nil {
		return nil
	}
	out := new(ExporterContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDB) DeepCopyInto(out *ExternalDB) {
	*out = *in
	out.PasswordSecretKeyRef = in.PasswordSecretKeyRef
	out.TLS = in.TLS
	if in.StorageParameters != nil {
		in, out := &in.StorageParameters, &out.StorageParameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDB.
func (in *ExternalDB) DeepCopy() *ExternalDB {
	if in == nil {
		return nil
	}
	out := new(ExternalDB)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDBTLSConfig) DeepCopyInto(out *ExternalDBTLSConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDBTLSConfig.
func (in *ExternalDBTLSConfig) DeepCopy() *ExternalDBTLSConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalDBTLSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckConfig) DeepCopyInto(out *HealthCheckConfig) {
	*out = *in
	if in.HealthCheckNodeState != nil {
		in, out := &in.HealthCheckNodeState, &out.HealthCheckNodeState
		*out = make([]HealthCheckNodeState, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckConfig.
func (in *HealthCheckConfig) DeepCopy() *HealthCheckConfig {
	if in == nil {
		return nil
	}
	out := new(HealthCheckConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckNodeState) DeepCopyInto(out *HealthCheckNodeState) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckNodeState.
func (in *HealthCheckNodeState) DeepCopy() *HealthCheckNodeState {
	if in == nil {
		return nil
	}
	out := new(HealthCheckNodeState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *K8sNodeFilter) DeepCopyInto(out *K8sNodeFilter) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(corev1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]corev1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new K8sNodeFilter.
func (in *K8sNodeFilter) DeepCopy() *K8sNodeFilter {
	if in == nil {
		return nil
	}
	out := new(K8sNodeFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MPIConfig) DeepCopyInto(out *MPIConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MPIConfig.
func (in *MPIConfig) DeepCopy() *MPIConfig {
	if in == nil {
		return nil
	}
	out := new(MPIConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MariaDbOperator) DeepCopyInto(out *MariaDbOperator) {
	*out = *in
	in.NodeContainer.DeepCopyInto(&out.NodeContainer)
	if in.PodSecurityContext != nil {
		in, out := &in.PodSecurityContext, &out.PodSecurityContext
		*out = new(v1alpha1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityContext != nil {
		in, out := &in.SecurityContext, &out.SecurityContext
		*out = new(v1alpha1.SecurityContext)
		(*in).DeepCopyInto(*out)
	}
	out.Metrics = in.Metrics
	if in.Replication != nil {
		in, out := &in.Replication, &out.Replication
		*out = new(v1alpha1.Replication)
		(*in).DeepCopyInto(*out)
	}
	in.Storage.DeepCopyInto(&out.Storage)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MariaDbOperator.
func (in *MariaDbOperator) DeepCopy() *MariaDbOperator {
	if in == nil {
		return nil
	}
	out := new(MariaDbOperator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MariadbMetrics) DeepCopyInto(out *MariadbMetrics) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MariadbMetrics.
func (in *MariadbMetrics) DeepCopy() *MariadbMetrics {
	if in == nil {
		return nil
	}
	out := new(MariadbMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeContainer) DeepCopyInto(out *NodeContainer) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make(corev1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeContainer.
func (in *NodeContainer) DeepCopy() *NodeContainer {
	if in == nil {
		return nil
	}
	out := new(NodeContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeVolume) DeepCopyInto(out *NodeVolume) {
	*out = *in
	if in.VolumeSourceName != nil {
		in, out := &in.VolumeSourceName, &out.VolumeSourceName
		*out = new(string)
		**out = **in
	}
	if in.VolumeClaimTemplateSpec != nil {
		in, out := &in.VolumeClaimTemplateSpec, &out.VolumeClaimTemplateSpec
		*out = new(corev1.PersistentVolumeClaimSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeVolume.
func (in *NodeVolume) DeepCopy() *NodeVolume {
	if in == nil {
		return nil
	}
	out := new(NodeVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeVolumeMount) DeepCopyInto(out *NodeVolumeMount) {
	*out = *in
	if in.VolumeSourceName != nil {
		in, out := &in.VolumeSourceName, &out.VolumeSourceName
		*out = new(string)
		**out = **in
	}
	if in.VolumeClaimTemplateSpec != nil {
		in, out := &in.VolumeClaimTemplateSpec, &out.VolumeClaimTemplateSpec
		*out = new(corev1.PersistentVolumeClaimSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeVolumeMount.
func (in *NodeVolumeMount) DeepCopy() *NodeVolumeMount {
	if in == nil {
		return nil
	}
	out := new(NodeVolumeMount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionConfiguration) DeepCopyInto(out *PartitionConfiguration) {
	*out = *in
	if in.RawConfig != nil {
		in, out := &in.RawConfig, &out.RawConfig
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionConfiguration.
func (in *PartitionConfiguration) DeepCopy() *PartitionConfiguration {
	if in == nil {
		return nil
	}
	out := new(PartitionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordSecretKeyRef) DeepCopyInto(out *PasswordSecretKeyRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordSecretKeyRef.
func (in *PasswordSecretKeyRef) DeepCopy() *PasswordSecretKeyRef {
	if in == nil {
		return nil
	}
	out := new(PasswordSecretKeyRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlugStackConfig) DeepCopyInto(out *PlugStackConfig) {
	*out = *in
	out.Pyxis = in.Pyxis
	out.NcclDebug = in.NcclDebug
	if in.CustomPlugins != nil {
		in, out := &in.CustomPlugins, &out.CustomPlugins
		*out = make([]PluginConfigCustom, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlugStackConfig.
func (in *PlugStackConfig) DeepCopy() *PlugStackConfig {
	if in == nil {
		return nil
	}
	out := new(PlugStackConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginConfigCustom) DeepCopyInto(out *PluginConfigCustom) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginConfigCustom.
func (in *PluginConfigCustom) DeepCopy() *PluginConfigCustom {
	if in == nil {
		return nil
	}
	out := new(PluginConfigCustom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginConfigNcclDebug) DeepCopyInto(out *PluginConfigNcclDebug) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginConfigNcclDebug.
func (in *PluginConfigNcclDebug) DeepCopy() *PluginConfigNcclDebug {
	if in == nil {
		return nil
	}
	out := new(PluginConfigNcclDebug)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginConfigPyxis) DeepCopyInto(out *PluginConfigPyxis) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginConfigPyxis.
func (in *PluginConfigPyxis) DeepCopy() *PluginConfigPyxis {
	if in == nil {
		return nil
	}
	out := new(PluginConfigPyxis)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodMonitorConfig) DeepCopyInto(out *PodMonitorConfig) {
	*out = *in
	if in.RelabelConfig != nil {
		in, out := &in.RelabelConfig, &out.RelabelConfig
		*out = make([]monitoringv1.RelabelConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricRelabelConfigs != nil {
		in, out := &in.MetricRelabelConfigs, &out.MetricRelabelConfigs
		*out = make([]monitoringv1.RelabelConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodMonitorConfig.
func (in *PodMonitorConfig) DeepCopy() *PodMonitorConfig {
	if in == nil {
		return nil
	}
	out := new(PodMonitorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PopulateJail) DeepCopyInto(out *PopulateJail) {
	*out = *in
	if in.JailSnapshotVolume != nil {
		in, out := &in.JailSnapshotVolume, &out.JailSnapshotVolume
		*out = new(NodeVolume)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PopulateJail.
func (in *PopulateJail) DeepCopy() *PopulateJail {
	if in == nil {
		return nil
	}
	out := new(PopulateJail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SConfigController) DeepCopyInto(out *SConfigController) {
	*out = *in
	in.Node.DeepCopyInto(&out.Node)
	in.Container.DeepCopyInto(&out.Container)
	if in.RunAsUid != nil {
		in, out := &in.RunAsUid, &out.RunAsUid
		*out = new(int64)
		**out = **in
	}
	if in.RunAsGid != nil {
		in, out := &in.RunAsGid, &out.RunAsGid
		*out = new(int64)
		**out = **in
	}
	if in.ReconfigurePollInterval != nil {
		in, out := &in.ReconfigurePollInterval, &out.ReconfigurePollInterval
		*out = new(string)
		**out = **in
	}
	if in.ReconfigureWaitTimeout != nil {
		in, out := &in.ReconfigureWaitTimeout, &out.ReconfigureWaitTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SConfigController.
func (in *SConfigController) DeepCopy() *SConfigController {
	if in == nil {
		return nil
	}
	out := new(SConfigController)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Secrets) DeepCopyInto(out *Secrets) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Secrets.
func (in *Secrets) DeepCopy() *Secrets {
	if in == nil {
		return nil
	}
	out := new(Secrets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmCluster) DeepCopyInto(out *SlurmCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmCluster.
func (in *SlurmCluster) DeepCopy() *SlurmCluster {
	if in == nil {
		return nil
	}
	out := new(SlurmCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SlurmCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmClusterList) DeepCopyInto(out *SlurmClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SlurmCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmClusterList.
func (in *SlurmClusterList) DeepCopy() *SlurmClusterList {
	if in == nil {
		return nil
	}
	out := new(SlurmClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SlurmClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmClusterSpec) DeepCopyInto(out *SlurmClusterSpec) {
	*out = *in
	if in.Maintenance != nil {
		in, out := &in.Maintenance, &out.Maintenance
		*out = new(consts.MaintenanceMode)
		**out = **in
	}
	in.PopulateJail.DeepCopyInto(&out.PopulateJail)
	if in.K8sNodeFilters != nil {
		in, out := &in.K8sNodeFilters, &out.K8sNodeFilters
		*out = make([]K8sNodeFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeSources != nil {
		in, out := &in.VolumeSources, &out.VolumeSources
		*out = make([]VolumeSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.Secrets = in.Secrets
	in.SlurmNodes.DeepCopyInto(&out.SlurmNodes)
	in.PartitionConfiguration.DeepCopyInto(&out.PartitionConfiguration)
	in.SlurmConfig.DeepCopyInto(&out.SlurmConfig)
	if in.CustomSlurmConfig != nil {
		in, out := &in.CustomSlurmConfig, &out.CustomSlurmConfig
		*out = new(string)
		**out = **in
	}
	out.MPIConfig = in.MPIConfig
	in.PlugStackConfig.DeepCopyInto(&out.PlugStackConfig)
	in.SConfigController.DeepCopyInto(&out.SConfigController)
	if in.WorkerFeatures != nil {
		in, out := &in.WorkerFeatures, &out.WorkerFeatures
		*out = make([]WorkerFeature, len(*in))
		copy(*out, *in)
	}
	if in.HealthCheckConfig != nil {
		in, out := &in.HealthCheckConfig, &out.HealthCheckConfig
		*out = new(HealthCheckConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmClusterSpec.
func (in *SlurmClusterSpec) DeepCopy() *SlurmClusterSpec {
	if in == nil {
		return nil
	}
	out := new(SlurmClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmClusterStatus) DeepCopyInto(out *SlurmClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Phase != nil {
		in, out := &in.Phase, &out.Phase
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmClusterStatus.
func (in *SlurmClusterStatus) DeepCopy() *SlurmClusterStatus {
	if in == nil {
		return nil
	}
	out := new(SlurmClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmConfig) DeepCopyInto(out *SlurmConfig) {
	*out = *in
	if in.DefMemPerNode != nil {
		in, out := &in.DefMemPerNode, &out.DefMemPerNode
		*out = new(int32)
		**out = **in
	}
	if in.DefCpuPerGPU != nil {
		in, out := &in.DefCpuPerGPU, &out.DefCpuPerGPU
		*out = new(int32)
		**out = **in
	}
	if in.CompleteWait != nil {
		in, out := &in.CompleteWait, &out.CompleteWait
		*out = new(int32)
		**out = **in
	}
	if in.Epilog != nil {
		in, out := &in.Epilog, &out.Epilog
		*out = new(string)
		**out = **in
	}
	if in.Prolog != nil {
		in, out := &in.Prolog, &out.Prolog
		*out = new(string)
		**out = **in
	}
	if in.TaskPluginParam != nil {
		in, out := &in.TaskPluginParam, &out.TaskPluginParam
		*out = new(string)
		**out = **in
	}
	if in.MaxJobCount != nil {
		in, out := &in.MaxJobCount, &out.MaxJobCount
		*out = new(int32)
		**out = **in
	}
	if in.MinJobAge != nil {
		in, out := &in.MinJobAge, &out.MinJobAge
		*out = new(int32)
		**out = **in
	}
	if in.MessageTimeout != nil {
		in, out := &in.MessageTimeout, &out.MessageTimeout
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmConfig.
func (in *SlurmConfig) DeepCopy() *SlurmConfig {
	if in == nil {
		return nil
	}
	out := new(SlurmConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmExporter) DeepCopyInto(out *SlurmExporter) {
	*out = *in
	in.SlurmNode.DeepCopyInto(&out.SlurmNode)
	in.PodMonitorConfig.DeepCopyInto(&out.PodMonitorConfig)
	in.Exporter.DeepCopyInto(&out.Exporter)
	in.Munge.DeepCopyInto(&out.Munge)
	in.Volumes.DeepCopyInto(&out.Volumes)
	in.ExporterContainer.DeepCopyInto(&out.ExporterContainer)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmExporter.
func (in *SlurmExporter) DeepCopy() *SlurmExporter {
	if in == nil {
		return nil
	}
	out := new(SlurmExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmExporterVolumes) DeepCopyInto(out *SlurmExporterVolumes) {
	*out = *in
	in.Jail.DeepCopyInto(&out.Jail)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmExporterVolumes.
func (in *SlurmExporterVolumes) DeepCopy() *SlurmExporterVolumes {
	if in == nil {
		return nil
	}
	out := new(SlurmExporterVolumes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmNode) DeepCopyInto(out *SlurmNode) {
	*out = *in
	if in.CustomInitContainers != nil {
		in, out := &in.CustomInitContainers, &out.CustomInitContainers
		*out = make([]corev1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmNode.
func (in *SlurmNode) DeepCopy() *SlurmNode {
	if in == nil {
		return nil
	}
	out := new(SlurmNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmNodeAccounting) DeepCopyInto(out *SlurmNodeAccounting) {
	*out = *in
	in.SlurmNode.DeepCopyInto(&out.SlurmNode)
	in.Slurmdbd.DeepCopyInto(&out.Slurmdbd)
	in.Munge.DeepCopyInto(&out.Munge)
	in.ExternalDB.DeepCopyInto(&out.ExternalDB)
	in.MariaDbOperator.DeepCopyInto(&out.MariaDbOperator)
	out.SlurmdbdConfig = in.SlurmdbdConfig
	in.SlurmConfig.DeepCopyInto(&out.SlurmConfig)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmNodeAccounting.
func (in *SlurmNodeAccounting) DeepCopy() *SlurmNodeAccounting {
	if in == nil {
		return nil
	}
	out := new(SlurmNodeAccounting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmNodeController) DeepCopyInto(out *SlurmNodeController) {
	*out = *in
	if in.CustomInitContainers != nil {
		in, out := &in.CustomInitContainers, &out.CustomInitContainers
		*out = make([]corev1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Slurmctld.DeepCopyInto(&out.Slurmctld)
	in.Munge.DeepCopyInto(&out.Munge)
	in.Volumes.DeepCopyInto(&out.Volumes)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmNodeController.
func (in *SlurmNodeController) DeepCopy() *SlurmNodeController {
	if in == nil {
		return nil
	}
	out := new(SlurmNodeController)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmNodeControllerVolumes) DeepCopyInto(out *SlurmNodeControllerVolumes) {
	*out = *in
	in.Spool.DeepCopyInto(&out.Spool)
	in.Jail.DeepCopyInto(&out.Jail)
	if in.CustomMounts != nil {
		in, out := &in.CustomMounts, &out.CustomMounts
		*out = make([]NodeVolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmNodeControllerVolumes.
func (in *SlurmNodeControllerVolumes) DeepCopy() *SlurmNodeControllerVolumes {
	if in == nil {
		return nil
	}
	out := new(SlurmNodeControllerVolumes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmNodeLogin) DeepCopyInto(out *SlurmNodeLogin) {
	*out = *in
	in.SlurmNode.DeepCopyInto(&out.SlurmNode)
	in.Sshd.DeepCopyInto(&out.Sshd)
	in.Munge.DeepCopyInto(&out.Munge)
	if in.SshdServiceAnnotations != nil {
		in, out := &in.SshdServiceAnnotations, &out.SshdServiceAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SshRootPublicKeys != nil {
		in, out := &in.SshRootPublicKeys, &out.SshRootPublicKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Volumes.DeepCopyInto(&out.Volumes)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmNodeLogin.
func (in *SlurmNodeLogin) DeepCopy() *SlurmNodeLogin {
	if in == nil {
		return nil
	}
	out := new(SlurmNodeLogin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmNodeLoginVolumes) DeepCopyInto(out *SlurmNodeLoginVolumes) {
	*out = *in
	in.Jail.DeepCopyInto(&out.Jail)
	if in.JailSubMounts != nil {
		in, out := &in.JailSubMounts, &out.JailSubMounts
		*out = make([]NodeVolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomMounts != nil {
		in, out := &in.CustomMounts, &out.CustomMounts
		*out = make([]NodeVolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmNodeLoginVolumes.
func (in *SlurmNodeLoginVolumes) DeepCopy() *SlurmNodeLoginVolumes {
	if in == nil {
		return nil
	}
	out := new(SlurmNodeLoginVolumes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmNodeWorker) DeepCopyInto(out *SlurmNodeWorker) {
	*out = *in
	in.SlurmNode.DeepCopyInto(&out.SlurmNode)
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
	in.Slurmd.DeepCopyInto(&out.Slurmd)
	in.Munge.DeepCopyInto(&out.Munge)
	if in.WorkerAnnotations != nil {
		in, out := &in.WorkerAnnotations, &out.WorkerAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Volumes.DeepCopyInto(&out.Volumes)
	if in.WaitForController != nil {
		in, out := &in.WaitForController, &out.WaitForController
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmNodeWorker.
func (in *SlurmNodeWorker) DeepCopy() *SlurmNodeWorker {
	if in == nil {
		return nil
	}
	out := new(SlurmNodeWorker)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmNodeWorkerVolumes) DeepCopyInto(out *SlurmNodeWorkerVolumes) {
	*out = *in
	in.Spool.DeepCopyInto(&out.Spool)
	in.Jail.DeepCopyInto(&out.Jail)
	if in.JailSubMounts != nil {
		in, out := &in.JailSubMounts, &out.JailSubMounts
		*out = make([]NodeVolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomMounts != nil {
		in, out := &in.CustomMounts, &out.CustomMounts
		*out = make([]NodeVolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharedMemorySize != nil {
		in, out := &in.SharedMemorySize, &out.SharedMemorySize
		x := (*in).DeepCopy()
		*out = &x
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmNodeWorkerVolumes.
func (in *SlurmNodeWorkerVolumes) DeepCopy() *SlurmNodeWorkerVolumes {
	if in == nil {
		return nil
	}
	out := new(SlurmNodeWorkerVolumes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmNodes) DeepCopyInto(out *SlurmNodes) {
	*out = *in
	in.Accounting.DeepCopyInto(&out.Accounting)
	in.Controller.DeepCopyInto(&out.Controller)
	in.Worker.DeepCopyInto(&out.Worker)
	in.Login.DeepCopyInto(&out.Login)
	in.Exporter.DeepCopyInto(&out.Exporter)
	in.Rest.DeepCopyInto(&out.Rest)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmNodes.
func (in *SlurmNodes) DeepCopy() *SlurmNodes {
	if in == nil {
		return nil
	}
	out := new(SlurmNodes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmRest) DeepCopyInto(out *SlurmRest) {
	*out = *in
	in.SlurmNode.DeepCopyInto(&out.SlurmNode)
	if in.ThreadCount != nil {
		in, out := &in.ThreadCount, &out.ThreadCount
		*out = new(int32)
		**out = **in
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(int32)
		**out = **in
	}
	in.SlurmRestNode.DeepCopyInto(&out.SlurmRestNode)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmRest.
func (in *SlurmRest) DeepCopy() *SlurmRest {
	if in == nil {
		return nil
	}
	out := new(SlurmRest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlurmdbdConfig) DeepCopyInto(out *SlurmdbdConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlurmdbdConfig.
func (in *SlurmdbdConfig) DeepCopy() *SlurmdbdConfig {
	if in == nil {
		return nil
	}
	out := new(SlurmdbdConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSource) DeepCopyInto(out *VolumeSource) {
	*out = *in
	in.VolumeSource.DeepCopyInto(&out.VolumeSource)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSource.
func (in *VolumeSource) DeepCopy() *VolumeSource {
	if in == nil {
		return nil
	}
	out := new(VolumeSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerFeature) DeepCopyInto(out *WorkerFeature) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerFeature.
func (in *WorkerFeature) DeepCopy() *WorkerFeature {
	if in == nil {
		return nil
	}
	out := new(WorkerFeature)
	in.DeepCopyInto(out)
	return out
}
